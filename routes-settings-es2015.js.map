{"version":3,"sources":["./src/app/routes/settings/settings-routing.module.ts","./src/app/routes/settings/settings.module.ts","./src/app/routes/settings/index.ts","./src/app/routes/settings/theme-selector/theme-selector.component.ts","./src/app/routes/settings/theme-selector/theme-selector.component.html","./src/app/routes/settings/theme-selector/index.ts","./src/app/routes/settings/theme-selector/theme-selector.module.ts","./src/app/routes/settings/settings.component.ts","./src/app/routes/settings/settings.component.html"],"names":[],"mappings":"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","file":"routes-settings-es2015.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\nimport { ThemeSelectorComponent } from './theme-selector';\n\nconst settingsRoutes: Routes = [\n    {\n        component: ThemeSelectorComponent,\n        path: 'theme',\n    },\n    {\n        component: SettingsComponent,\n        path: '',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(settingsRoutes),\n    ],\n})\nexport class SettingsRoutingModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { RetryDialogModule } from 'src/app/modules/common/retry-dialog';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        SettingsComponent,\n    ],\n    imports: [\n        SettingsRoutingModule,\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        RetryDialogModule,\n        MatDialogModule,\n        RouterModule,\n    ],\n    providers: [],\n})\nexport class SettingsModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { SettingsModule } from './settings.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSelectionListChange } from '@angular/material/list';\nimport { Subscription } from 'rxjs';\nimport { SettingsService, Theme } from 'src/app/services';\n\n@Component({\n    selector: 'app-theme-selector',\n    styleUrls: ['./theme-selector.component.scss'],\n    templateUrl: './theme-selector.component.html',\n})\nexport class ThemeSelectorComponent implements OnInit, OnDestroy {\n\n    public theme: Theme;\n    private themeSubscription: Subscription;\n    public constructor(public settingsService: SettingsService) {\n\n    }\n    public selectTheme(theme: Theme): void {\n        this.settingsService.theme = theme;\n    }\n\n    public onSelectionChange(change: MatSelectionListChange): void {\n        const value: Theme = change.options[0].value;\n        this.settingsService.theme = value;\n    }\n\n    public ngOnInit(): void {\n        this.themeSubscription = this.settingsService\n            .themeObservable\n            .subscribe({\n                next: (theme: Theme): void => {\n                    this.theme = theme;\n                },\n            });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.themeSubscription) {\n            this.themeSubscription.unsubscribe();\n        }\n    }\n}\n","<mat-selection-list multiple=\"false\" (selectionChange)=\"onSelectionChange($event)\"><mat-list-option [value]=\"1\" [selected]=\"theme == 1\"><mat-icon matListIcon>bedtime</mat-icon><h3 matLine>Dark</h3><p matLine>Applies a darker theme</p></mat-list-option><mat-list-option [value]=\"2\" [selected]=\"theme == 2\"><mat-icon matListIcon>wb_sunny</mat-icon><h3 matLine>Light</h3><p matLine>Applies a lighter theme</p></mat-list-option><mat-list-option [value]=\"0\" [selected]=\"theme == 0\"><mat-icon matListIcon>{{theme == 1 ? 'bedtime' : 'wb_sunny'}}</mat-icon><h3 matLine>System Default ({{theme == 1 ? 'Dark' : 'Light'}})</h3><p matLine>Applies your system default theme.</p></mat-list-option></mat-selection-list>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { ThemeSelectorModule } from './theme-selector.module';\nexport { ThemeSelectorComponent } from './theme-selector.component';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { ThemeSelectorComponent } from './theme-selector.component';\n\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        ThemeSelectorComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n    ],\n    providers: [\n    ],\n})\nexport class ThemeSelectorModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-settings',\n    styleUrls: ['./settings.component.scss'],\n    templateUrl: './settings.component.html',\n})\nexport class SettingsComponent {\n}\n","<mat-nav-list><h3 matSubheader>Appearance</h3><a mat-list-item [routerLink]=\"['/settings','theme']\" role=\"navigation\"><mat-icon matListIcon>color_lense</mat-icon><h4 matLine>Theme</h4><p matLine>Select your theme preference</p></a></mat-nav-list>"],"sourceRoot":"webpack:///"}