{"version":3,"sources":["webpack:///src/app/routes/settings/settings-routing.module.ts","webpack:///src/app/routes/settings/settings.module.ts","webpack:///src/app/routes/settings/index.ts","webpack:///src/app/routes/settings/theme-selector/theme-selector.component.ts","webpack:///src/app/routes/settings/theme-selector/theme-selector.component.html","webpack:///src/app/routes/settings/theme-selector/index.ts","webpack:///src/app/routes/settings/theme-selector/theme-selector.module.ts","webpack:///src/app/routes/settings/settings.component.ts","webpack:///src/app/routes/settings/settings.component.html"],"names":["settingsRoutes","component","path","SettingsRoutingModule","forChild","SettingsModule","ThemeSelectorComponent","settingsService","theme","change","value","options","themeSubscription","themeObservable","subscribe","next","unsubscribe","onSelectionChange","ThemeSelectorModule","SettingsComponent"],"mappings":"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","file":"routes-settings-es5.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\nimport { ThemeSelectorComponent } from './theme-selector';\n\nconst settingsRoutes: Routes = [\n    {\n        component: ThemeSelectorComponent,\n        path: 'theme',\n    },\n    {\n        component: SettingsComponent,\n        path: '',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(settingsRoutes),\n    ],\n})\nexport class SettingsRoutingModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { RetryDialogModule } from 'src/app/modules/common/retry-dialog';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        SettingsComponent,\n    ],\n    imports: [\n        SettingsRoutingModule,\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        RetryDialogModule,\n        MatDialogModule,\n        RouterModule,\n    ],\n    providers: [],\n})\nexport class SettingsModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { SettingsModule } from './settings.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSelectionListChange } from '@angular/material/list';\nimport { Subscription } from 'rxjs';\nimport { SettingsService, Theme } from 'src/app/services';\n\n@Component({\n    selector: 'app-theme-selector',\n    styleUrls: ['./theme-selector.component.scss'],\n    templateUrl: './theme-selector.component.html',\n})\nexport class ThemeSelectorComponent implements OnInit, OnDestroy {\n\n    public theme: Theme;\n    private themeSubscription: Subscription;\n    public constructor(public settingsService: SettingsService) {\n\n    }\n    public selectTheme(theme: Theme): void {\n        this.settingsService.theme = theme;\n    }\n\n    public onSelectionChange(change: MatSelectionListChange): void {\n        const value: Theme = change.options[0].value;\n        this.settingsService.theme = value;\n    }\n\n    public ngOnInit(): void {\n        this.themeSubscription = this.settingsService\n            .themeObservable\n            .subscribe({\n                next: (theme: Theme): void => {\n                    this.theme = theme;\n                },\n            });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.themeSubscription) {\n            this.themeSubscription.unsubscribe();\n        }\n    }\n}\n","<mat-selection-list multiple=\"false\" (selectionChange)=\"onSelectionChange($event)\"><mat-list-option [value]=\"1\" [selected]=\"theme == 1\"><mat-icon matListIcon>bedtime</mat-icon><h3 matLine>Dark</h3><p matLine>Applies a darker theme</p></mat-list-option><mat-list-option [value]=\"2\" [selected]=\"theme == 2\"><mat-icon matListIcon>wb_sunny</mat-icon><h3 matLine>Light</h3><p matLine>Applies a lighter theme</p></mat-list-option><mat-list-option [value]=\"0\" [selected]=\"theme == 0\"><mat-icon matListIcon>{{theme == 1 ? 'bedtime' : 'wb_sunny'}}</mat-icon><h3 matLine>System Default ({{theme == 1 ? 'Dark' : 'Light'}})</h3><p matLine>Applies your system default theme.</p></mat-list-option></mat-selection-list>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { ThemeSelectorModule } from './theme-selector.module';\nexport { ThemeSelectorComponent } from './theme-selector.component';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { ThemeSelectorComponent } from './theme-selector.component';\n\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        ThemeSelectorComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n    ],\n    providers: [\n    ],\n})\nexport class ThemeSelectorModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-settings',\n    styleUrls: ['./settings.component.scss'],\n    templateUrl: './settings.component.html',\n})\nexport class SettingsComponent {\n}\n","<mat-nav-list><h3 matSubheader>Appearance</h3><a mat-list-item [routerLink]=\"['/settings','theme']\" role=\"navigation\"><mat-icon matListIcon>color_lense</mat-icon><h4 matLine>Theme</h4><p matLine>Select your theme preference</p></a></mat-nav-list>"]}