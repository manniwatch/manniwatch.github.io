{"version":3,"sources":["./src/app/routes/trip-passages/trip-passages.service.ts","./src/app/routes/trip-passages/trip-passages-list-item.component.ts","./src/app/routes/trip-passages/trip-passages-list-item.component.html","./src/app/routes/trip-passages/trip-util.ts","./src/app/routes/trip-passages/index.ts","./src/app/routes/trip-passages/trip-passages.resolver.ts","./src/app/routes/trip-passages/trip-passages-routing.module.ts","./src/app/routes/trip-passages/trip-passages-list.component.html","./src/app/routes/trip-passages/trip-passages-list.component.ts","./src/app/routes/trip-passages/trip-passages.component.ts","./src/app/routes/trip-passages/trip-passages.component.html","./src/app/routes/trip-passages/trip-passages.module.ts"],"names":[],"mappings":"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","file":"routes-trip-passages-es2015.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { ITripPassages } from '@manniwatch/api-types';\nimport { merge, timer, BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { first, map, mergeMap, scan, switchMap, take, tap } from 'rxjs/operators';\nimport { ApiService, TimestampedVehicleLocation, VehicleService } from 'src/app/services';\nimport { IPassageStatus, TripPassagesUtil, UpdateStatus } from './trip-util';\n\n@Injectable()\nexport class TripPassagesService {\n    public readonly statusObservable: Observable<IPassageStatus>;\n    private readonly statusSubject: BehaviorSubject<IPassageStatus>;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private vehicleService: VehicleService,\n        private appRef: ApplicationRef) {\n        this.statusSubject = new BehaviorSubject(route.snapshot.data.tripPassages);\n        this.statusObservable = this.createStatusObservable(this.statusSubject);\n    }\n\n    public createStatusObservable(statusSubject: Subject<IPassageStatus>): Observable<IPassageStatus> {\n        const refreshObservable: Observable<IPassageStatus> = this.createRefreshPollObservable(statusSubject);\n        return this.appRef.isStable\n            .pipe(first(),\n                mergeMap((): Observable<IPassageStatus> => {\n                    return merge(this.route.data.pipe(map((data: Data): ITripPassages => data.tripPassages)), refreshObservable)\n                        .pipe(scan((acc: IPassageStatus, val: IPassageStatus, idx: number): IPassageStatus => {\n                            if (val.failures > 0) {\n                                const newVal: IPassageStatus = Object.assign({}, val);\n                                newVal.failures = val.failures + acc.failures;\n                                return newVal;\n                            }\n                            return val;\n                        }),\n                            tap((newStatus: IPassageStatus): void => statusSubject.next(newStatus)));\n                }));\n    }\n\n    public createRefreshPollObservable(statusSubject: Subject<IPassageStatus>): Observable<IPassageStatus> {\n        return statusSubject.pipe(\n            switchMap((status: IPassageStatus): Observable<IPassageStatus> => {\n                const refreshDelay: number = (status.status === UpdateStatus.LOADED) ?\n                    10000 :\n                    20000;\n                return this.createDelayedPassageRequest(status.tripId, refreshDelay);\n            }));\n    }\n\n    public createDelayedPassageRequest(tripId: string, refreshDelay: number): Observable<IPassageStatus> {\n        return timer(refreshDelay)\n            .pipe(take(1),\n                mergeMap((): Observable<ITripPassages> => this.apiService.getTripPassages(tripId)),\n                TripPassagesUtil.convertResponse(tripId),\n                TripPassagesUtil.handleError(tripId));\n    }\n\n    public createStopLocationObservable(): Observable<TimestampedVehicleLocation> {\n        return this.route.data\n            .pipe(map((data: any): IPassageStatus => {\n                return data.tripPassages;\n            }), switchMap((tripStatus: IPassageStatus): Observable<TimestampedVehicleLocation> => {\n                return this.vehicleService.getVehicleByTripId(tripStatus.tripId);\n            }));\n    }\n\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Input,\n} from '@angular/core';\nimport { ITripPassage, VEHICLE_STATUS } from '@manniwatch/api-types';\nimport {\n    differenceInMinutes as dateDifferenceInMinutes,\n    format as dateFormat,\n    formatDistanceToNow as dateFormatDistanceToNow,\n    parse as dateParse,\n} from 'date-fns';\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-trip-passages-list-item',\n    styleUrls: ['./trip-passages-list-item.component.scss'],\n    templateUrl: './trip-passages-list-item.component.html',\n})\nexport class TripPassagesListItemComponent {\n    @Input()\n    public passage: ITripPassage;\n\n    @HostBinding('class.departed')\n    public get departed(): boolean {\n        return this.passage ? this.passage.status === VEHICLE_STATUS.DEPARTED : false;\n    }\n    @HostBinding('class.stopping')\n    public get stopping(): boolean {\n        return this.passage ? this.passage.status === VEHICLE_STATUS.STOPPING : false;\n    }\n\n    public get passageTime(): string {\n        if (this.passage) {\n            // Maybe either of each is set but actualTime is prefered!\n            const time: string = this.passage.actualTime || this.passage.plannedTime;\n            if (time) {\n                const planned: Date = dateParse(time, 'HH:mm', new Date());\n                const diff: number = dateDifferenceInMinutes(planned, new Date());\n                if (Math.abs(diff) < 15) {\n                    return dateFormatDistanceToNow(planned, { addSuffix: true });\n                }\n                return dateFormat(planned, 'p');\n            }\n        }\n        return 'No departure time';\n    }\n}\n","<a mat-list-item [routerLink]=\"['/stop', passage?.stop?.shortName]\" role=\"listitem\"><mat-icon matListIcon role=\"figure\" i18n-aria-label=\"@@busStopIcon\" aria-label=\"Bus stop icon\"></mat-icon><h4 class=\"title\" matLine aria-label=\"Stop name\" i18n-aria-label=\"@@stopName\">{{passage?.stop?.name}}</h4><p class=\"subtitle\" matLine><span role=\"timer\">{{passageTime}}<span class=\"demo-2\" role=\"status\">&nbsp;-- {{passage?.status}}</span></span></p></a>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { of, Observable, OperatorFunction } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { TripInfoWithId } from 'src/app/services';\n\nexport enum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status?: UpdateStatus;\n    tripInfo?: TripInfoWithId;\n    timestamp: number;\n    failures: number;\n    tripId: string;\n}\n\nexport class TripPassagesUtil {\n    public static convertResponse(tripId: string): OperatorFunction<TripInfoWithId, IPassageStatus> {\n        return map((tripPassages: TripInfoWithId): IPassageStatus =>\n            ({\n                failures: 0,\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n                tripId: tripPassages.tripId,\n                tripInfo: tripPassages,\n            }));\n    }\n    public static handleError(tripId: string): OperatorFunction<any, IPassageStatus> {\n        return catchError((err: any): Observable<IPassageStatus> => {\n            if (err && err.status) {\n                return of({\n                    failures: 1,\n                    passages: undefined,\n                    status: (err.status >= 500 && err.status < 600) ? UpdateStatus.SERVER_ERROR : err.status,\n                    timestamp: Date.now(),\n                    tripId,\n                });\n            } else {\n                return of({\n                    failures: 1,\n                    passages: undefined,\n                    status: UpdateStatus.ERROR,\n                    timestamp: Date.now(),\n                    tripId,\n                });\n            }\n        });\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { TripPassagesModule } from './trip-passages.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from 'src/app/services';\nimport { IPassageStatus, TripPassagesUtil } from './trip-util';\n\n/**\n * Resolver used to retrieve TripPassage Information in {@link TripPassagesRoutingModule}\n */\n@Injectable()\nexport class TripPassagesResolver implements Resolve<IPassageStatus> {\n\n    public constructor(private api: ApiService) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IPassageStatus> {\n        const tripId: string = route.params.tripId as string;\n        return this.api.getTripPassages(tripId)\n            .pipe(TripPassagesUtil.convertResponse(tripId),\n                TripPassagesUtil.handleError(tripId));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: TripPassagesComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':tripId',\n        resolve: {\n            tripPassages: TripPassagesResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class TripPassagesRoutingModule { }\n","<mat-nav-list *ngIf=\"hasPassages(); else noPassagesBlock\" role=\"list\"><app-trip-passages-list-item *ngFor=\"let passageItem of passages\" [passage]=\"passageItem\"></app-trip-passages-list-item></mat-nav-list><ng-template #noPassagesBlock><h3>No Passages</h3></ng-template>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ITripPassage } from '@manniwatch/api-types';\nimport { TripInfoWithId } from 'src/app/services';\n\n/**\n * List of Departures Component\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-trip-passages-list',\n    styleUrls: ['./trip-passages-list.component.scss'],\n    templateUrl: './trip-passages-list.component.html',\n})\nexport class TripPassagesListComponent {\n    @Input()\n    public set tripInfo(info: TripInfoWithId) {\n        if (info) {\n            const passages: ITripPassage[] = [];\n            if (info.actual) {\n                passages.push(...info.actual);\n            }\n            if (info.old && info.old.length > 0) {\n                passages.push(...info.old);\n            }\n            passages.sort((a: ITripPassage, b: ITripPassage): number =>\n                parseInt(a.stop_seq_num, 10) - parseInt(b.stop_seq_num, 10));\n            this.passages = passages;\n            return;\n        }\n        this.passages = [];\n    }\n\n    public passages: ITripPassage[] = [];\n\n    /**\n     * Returns if the atleast one passages was provided\n     * @returns true if there is atleast one departure\n     */\n    public hasPassages(): boolean {\n        return Array.isArray(this.passages) && this.passages.length > 0;\n    }\n\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { IVehicleLocation } from '@manniwatch/api-types';\nimport { Subscription } from 'rxjs';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { runInsideZone } from 'src/app/util/rxjs';\nimport { TripPassagesService } from './trip-passages.service';\nimport {\n    UpdateStatus,\n} from './trip-util';\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    providers: [\n        TripPassagesService,\n    ],\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.html',\n})\nexport class TripPassagesComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n    public headerMapData: IStaticMapData;\n    public readonly STATUS_OPS: typeof UpdateStatus = UpdateStatus;\n    constructor(public readonly zone: NgZone,\n        public readonly passageService: TripPassagesService) { }\n\n    public ngOnInit(): void {\n        this.subscriptions.push(this.passageService\n            .createStopLocationObservable()\n            .pipe(runInsideZone(this.zone))\n            .subscribe({\n                next: (stopLocation: IVehicleLocation): void => {\n                    if (stopLocation) {\n                        this.headerMapData = {\n                            map: {\n                                center: stopLocation,\n                            },\n                            stops: undefined,\n                            vehicles: [stopLocation],\n                        };\n                    } else {\n                        this.headerMapData = {\n                            map: {\n                                blur: true,\n                                center: undefined,\n                            },\n                        };\n                    }\n                },\n            }));\n    }\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach((sub: Subscription): void => {\n            sub.unsubscribe();\n        });\n        this.subscriptions = [];\n    }\n}\n","<ng-container *ngIf=\"passageService.statusObservable | async as status\"><app-header-box title=\"{{status?.tripInfo.routeName}} - {{status?.tripInfo.directionText}}\"><map appOlStatic [mapData]=\"headerMapData\"></map></app-header-box><div class=\"not-found\" *ngIf=\"status.status==STATUS_OPS.NOT_FOUND\"><h4>not found</h4></div><app-trip-passages-list [tripInfo]=\"status.tripInfo\"></app-trip-passages-list></ng-container>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { HeaderBoxModule } from 'src/app/modules/header-box';\nimport { OlStaticMapModule } from 'src/app/modules/openlayers';\nimport { TripPassagesListItemComponent } from './trip-passages-list-item.component';\nimport { TripPassagesListComponent } from './trip-passages-list.component';\nimport { TripPassagesRoutingModule } from './trip-passages-routing.module';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n@NgModule({\n    declarations: [\n        TripPassagesComponent,\n        TripPassagesListComponent,\n        TripPassagesListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        TripPassagesRoutingModule,\n        HeaderBoxModule,\n        OlStaticMapModule,\n    ],\n    providers: [\n        TripPassagesResolver,\n    ],\n})\nexport class TripPassagesModule { }\n"],"sourceRoot":"webpack:///"}