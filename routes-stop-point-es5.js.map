{"version":3,"sources":["webpack:///src/app/routes/stop-point/stop-point-routing.module.ts","webpack:///src/app/routes/stop-point/index.ts","webpack:///src/app/routes/stop-point/stop-point-info.service.ts","webpack:///src/app/routes/stop-point/stop-point-info.component.ts","webpack:///src/app/routes/stop-point/stop-point-info.component.html","webpack:///src/app/routes/stop-point/stop-point-info.resolver.ts","webpack:///src/app/routes/stop-point/stop-point.module.ts"],"names":["tripPassagesRoute","component","data","openSidebar","path","resolve","stopPoint","StopPointRoutingModule","forChild","StopPointInfoService","route","apiService","stopService","appRef","stopPassageObservable","pipe","params","value","isStable","state","getStopPointPassages","stopShortName","stopPassage","watchStopPoint","undefined","stop","map","blur","center","StopPointInfoComponent","stopInfoService","subscriptions","push","createStopPointLocationObservable","subscribe","next","mapData","headerMapData","createStopPassageRefreshObservable","forEach","sub","unsubscribe","StopPointInfoResolver","api","router","stopPointId","err","status","navigate","StopPointModule"],"mappings":"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","file":"routes-stop-point-es5.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopPointInfoComponent } from './stop-point-info.component';\nimport { StopPointInfoResolver } from './stop-point-info.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopPointInfoComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':stopPointId',\n        resolve: {\n            stopPoint: StopPointInfoResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopPointRoutingModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { StopPointModule } from './stop-point.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopPassage, IStopPointLocation } from '@manniwatch/api-types';\nimport { interval, Observable } from 'rxjs';\nimport { first, map, mergeMap, startWith, switchMap } from 'rxjs/operators';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { ApiService } from 'src/app/services';\nimport { StopPointService } from 'src/app/services';\n\nexport interface IStatus {\n    location?: IStopPointLocation;\n    passages: IStopPassage;\n}\n@Injectable()\nexport class StopPointInfoService {\n    public readonly stopPassageObservable: Observable<IStopPassage>;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        public stopService: StopPointService,\n        private appRef: ApplicationRef) {\n        this.stopPassageObservable = this.route.data.pipe(map((params: any): IStopPassage => {\n            return params.stopPoint;\n        }));\n    }\n    public createStopPassageRefreshObservable(): Observable<IStopPassage> {\n        return this.stopPassageObservable\n            .pipe(switchMap((value: IStopPassage): Observable<IStopPassage> => {\n                return this.appRef\n                    .isStable.pipe(first((state: boolean): boolean => state),\n                        mergeMap((): Observable<IStopPassage> => {\n                            return interval(5000)\n                                .pipe(switchMap((): Observable<IStopPassage> =>\n                                    this.apiService\n                                        .getStopPointPassages(value.stopShortName)));\n                        }),\n                        startWith(value));\n            }));\n    }\n\n    public createStopPointLocationObservable(): Observable<IStaticMapData> {\n        return this.stopPassageObservable\n            .pipe(switchMap((stopPassage: IStopPassage): Observable<IStopPointLocation> => {\n                return this.stopService.watchStopPoint(stopPassage.stopShortName)\n                    .pipe(startWith<IStopPointLocation>(undefined as IStopPointLocation));\n            }), map((stop: IStopPointLocation): IStaticMapData => {\n                // tslint:disable-next-line:triple-equals\n                if (stop == undefined) {\n                    return { map: { blur: true } };\n                } else {\n                    return {\n                        map: {\n                            blur: false,\n                            center: stop,\n                        },\n                    };\n                }\n            }));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { IStopPassage } from '@manniwatch/api-types';\nimport { Subscription } from 'rxjs';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { StopPointInfoService } from './stop-point-info.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [StopPointInfoService],\n    selector: 'app-stop-point-info',\n    styleUrls: ['./stop-point-info.component.scss'],\n    templateUrl: './stop-point-info.component.html',\n})\nexport class StopPointInfoComponent implements OnInit, OnDestroy {\n\n    public headerMapData: IStaticMapData;\n    private subscriptions: Subscription[] = [];\n    public stopPassage: IStopPassage;\n    constructor(public stopInfoService: StopPointInfoService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscriptions.push(this.stopInfoService\n            .createStopPointLocationObservable()\n            .subscribe({\n                next: (mapData: IStaticMapData): void => {\n                    this.headerMapData = mapData;\n                },\n            }));\n        this.subscriptions.push(this.stopInfoService\n            .createStopPassageRefreshObservable()\n            .subscribe({\n                next: (mapData: IStopPassage): void => {\n                    this.stopPassage = mapData;\n                },\n            }));\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach((sub: Subscription): void => {\n            sub.unsubscribe();\n        });\n        this.subscriptions = [];\n    }\n}\n","<app-header-box title=\"{{stopPassage?.stopName}}\"><map appOlStatic [mapData]=\"headerMapData\"></map></app-header-box><mat-tab-group mat-stretch-tabs dynamicHeight><mat-tab i18n-label=\"tab header departures|Departures@@departures\" label=\"Departures\"><app-departure-list [departures]=\"stopPassage?.actual\"></app-departure-list></mat-tab><mat-tab i18n-label=\"tab header routes|Routes@@Routes\" label=\"Routes\"><app-route-list [routes]=\"stopPassage?.routes\"></app-route-list></mat-tab></mat-tab-group><ng-template *ngIf=\"false\"><div class=\"error-box\"><h3>Error occured</h3><p>Will retry in a 0s</p></div></ng-template>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopPassage } from '@manniwatch/api-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class StopPointInfoResolver implements Resolve<IStopPassage> {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: ApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IStopPassage> {\n        return this.api\n            .getStopPointPassages(route.params.stopPointId)\n            .pipe(catchError((err: any | HttpErrorResponse): Observable<any> => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DepartureListModule } from 'src/app/modules/departure-list';\nimport { HeaderBoxModule } from 'src/app/modules/header-box';\nimport { OlStaticMapModule } from 'src/app/modules/openlayers';\nimport { RouteListModule } from 'src/app/modules/route-list';\nimport { StopPointInfoComponent } from './stop-point-info.component';\nimport { StopPointInfoResolver } from './stop-point-info.resolver';\nimport { StopPointRoutingModule } from './stop-point-routing.module';\n@NgModule({\n    declarations: [\n        StopPointInfoComponent,\n    ],\n    imports: [\n        CommonModule,\n        DepartureListModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        StopPointRoutingModule,\n        MatTabsModule,\n        HeaderBoxModule,\n        OlStaticMapModule,\n        RouteListModule,\n    ],\n    providers: [\n        StopPointInfoResolver,\n    ],\n})\nexport class StopPointModule { }\n"]}