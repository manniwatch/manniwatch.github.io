{"version":3,"sources":["webpack:///src/app/routes/trip-passages/trip-passages.service.ts","webpack:///src/app/routes/trip-passages/trip-passages-list-item.component.ts","webpack:///src/app/routes/trip-passages/trip-passages-list-item.component.html","webpack:///src/app/routes/trip-passages/trip-util.ts","webpack:///src/app/routes/trip-passages/index.ts","webpack:///src/app/routes/trip-passages/trip-passages.resolver.ts","webpack:///src/app/routes/trip-passages/trip-passages-routing.module.ts","webpack:///src/app/routes/trip-passages/trip-passages-list.component.html","webpack:///src/app/routes/trip-passages/trip-passages-list.component.ts","webpack:///src/app/routes/trip-passages/trip-passages.component.ts","webpack:///src/app/routes/trip-passages/trip-passages.component.html","webpack:///src/app/routes/trip-passages/trip-passages.module.ts"],"names":["TripPassagesService","route","apiService","vehicleService","appRef","statusSubject","snapshot","data","tripPassages","statusObservable","createStatusObservable","refreshObservable","createRefreshPollObservable","isStable","pipe","acc","val","idx","failures","newVal","Object","assign","newStatus","next","status","refreshDelay","LOADED","createDelayedPassageRequest","tripId","getTripPassages","convertResponse","handleError","tripStatus","getVehicleByTripId","TripPassagesListItemComponent","passage","DEPARTED","STOPPING","time","actualTime","plannedTime","planned","Date","diff","Math","abs","addSuffix","UpdateStatus","TripPassagesUtil","timestamp","now","tripInfo","err","passages","undefined","SERVER_ERROR","ERROR","TripPassagesResolver","api","state","params","tripPassagesRoute","component","openSidebar","path","resolve","TripPassagesRoutingModule","forChild","TripPassagesListComponent","Array","isArray","length","info","actual","push","old","sort","a","b","parseInt","stop_seq_num","TripPassagesComponent","zone","passageService","subscriptions","STATUS_OPS","createStopLocationObservable","subscribe","stopLocation","headerMapData","map","center","stops","vehicles","blur","forEach","sub","unsubscribe","TripPassagesModule"],"mappings":"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","file":"routes-trip-passages-es5.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { ITripPassages } from '@manniwatch/api-types';\nimport { merge, timer, BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { first, map, mergeMap, scan, switchMap, take, tap } from 'rxjs/operators';\nimport { ApiService, TimestampedVehicleLocation, VehicleService } from 'src/app/services';\nimport { IPassageStatus, TripPassagesUtil, UpdateStatus } from './trip-util';\n\n@Injectable()\nexport class TripPassagesService {\n    public readonly statusObservable: Observable<IPassageStatus>;\n    private readonly statusSubject: BehaviorSubject<IPassageStatus>;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private vehicleService: VehicleService,\n        private appRef: ApplicationRef) {\n        this.statusSubject = new BehaviorSubject(route.snapshot.data.tripPassages);\n        this.statusObservable = this.createStatusObservable(this.statusSubject);\n    }\n\n    public createStatusObservable(statusSubject: Subject<IPassageStatus>): Observable<IPassageStatus> {\n        const refreshObservable: Observable<IPassageStatus> = this.createRefreshPollObservable(statusSubject);\n        return this.appRef.isStable\n            .pipe(first(),\n                mergeMap((): Observable<IPassageStatus> => {\n                    return merge(this.route.data.pipe(map((data: Data): ITripPassages => data.tripPassages)), refreshObservable)\n                        .pipe(scan((acc: IPassageStatus, val: IPassageStatus, idx: number): IPassageStatus => {\n                            if (val.failures > 0) {\n                                const newVal: IPassageStatus = Object.assign({}, val);\n                                newVal.failures = val.failures + acc.failures;\n                                return newVal;\n                            }\n                            return val;\n                        }),\n                            tap((newStatus: IPassageStatus): void => statusSubject.next(newStatus)));\n                }));\n    }\n\n    public createRefreshPollObservable(statusSubject: Subject<IPassageStatus>): Observable<IPassageStatus> {\n        return statusSubject.pipe(\n            switchMap((status: IPassageStatus): Observable<IPassageStatus> => {\n                const refreshDelay: number = (status.status === UpdateStatus.LOADED) ?\n                    10000 :\n                    20000;\n                return this.createDelayedPassageRequest(status.tripId, refreshDelay);\n            }));\n    }\n\n    public createDelayedPassageRequest(tripId: string, refreshDelay: number): Observable<IPassageStatus> {\n        return timer(refreshDelay)\n            .pipe(take(1),\n                mergeMap((): Observable<ITripPassages> => this.apiService.getTripPassages(tripId)),\n                TripPassagesUtil.convertResponse(tripId),\n                TripPassagesUtil.handleError(tripId));\n    }\n\n    public createStopLocationObservable(): Observable<TimestampedVehicleLocation> {\n        return this.route.data\n            .pipe(map((data: any): IPassageStatus => {\n                return data.tripPassages;\n            }), switchMap((tripStatus: IPassageStatus): Observable<TimestampedVehicleLocation> => {\n                return this.vehicleService.getVehicleByTripId(tripStatus.tripId);\n            }));\n    }\n\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Input,\n} from '@angular/core';\nimport { ITripPassage, VEHICLE_STATUS } from '@manniwatch/api-types';\nimport {\n    differenceInMinutes as dateDifferenceInMinutes,\n    format as dateFormat,\n    formatDistanceToNow as dateFormatDistanceToNow,\n    parse as dateParse,\n} from 'date-fns';\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-trip-passages-list-item',\n    styleUrls: ['./trip-passages-list-item.component.scss'],\n    templateUrl: './trip-passages-list-item.component.html',\n})\nexport class TripPassagesListItemComponent {\n    @Input()\n    public passage: ITripPassage;\n\n    @HostBinding('class.departed')\n    public get departed(): boolean {\n        return this.passage ? this.passage.status === VEHICLE_STATUS.DEPARTED : false;\n    }\n    @HostBinding('class.stopping')\n    public get stopping(): boolean {\n        return this.passage ? this.passage.status === VEHICLE_STATUS.STOPPING : false;\n    }\n\n    public get passageTime(): string {\n        if (this.passage) {\n            // Maybe either of each is set but actualTime is prefered!\n            const time: string = this.passage.actualTime || this.passage.plannedTime;\n            if (time) {\n                const planned: Date = dateParse(time, 'HH:mm', new Date());\n                const diff: number = dateDifferenceInMinutes(planned, new Date());\n                if (Math.abs(diff) < 15) {\n                    return dateFormatDistanceToNow(planned, { addSuffix: true });\n                }\n                return dateFormat(planned, 'p');\n            }\n        }\n        return 'No departure time';\n    }\n}\n","<a mat-list-item [routerLink]=\"['/stop', passage?.stop?.shortName]\" role=\"listitem\"><mat-icon matListIcon role=\"figure\" i18n-aria-label=\"@@busStopIcon\" aria-label=\"Bus stop icon\"></mat-icon><h4 class=\"title\" matLine aria-label=\"Stop name\" i18n-aria-label=\"@@stopName\">{{passage?.stop?.name}}</h4><p class=\"subtitle\" matLine><span role=\"timer\">{{passageTime}}<span class=\"demo-2\" role=\"status\">&nbsp;-- {{passage?.status}}</span></span></p></a>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { of, Observable, OperatorFunction } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { TripInfoWithId } from 'src/app/services';\n\nexport enum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status?: UpdateStatus;\n    tripInfo?: TripInfoWithId;\n    timestamp: number;\n    failures: number;\n    tripId: string;\n}\n\nexport class TripPassagesUtil {\n    public static convertResponse(tripId: string): OperatorFunction<TripInfoWithId, IPassageStatus> {\n        return map((tripPassages: TripInfoWithId): IPassageStatus =>\n            ({\n                failures: 0,\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n                tripId: tripPassages.tripId,\n                tripInfo: tripPassages,\n            }));\n    }\n    public static handleError(tripId: string): OperatorFunction<any, IPassageStatus> {\n        return catchError((err: any): Observable<IPassageStatus> => {\n            if (err && err.status) {\n                return of({\n                    failures: 1,\n                    passages: undefined,\n                    status: (err.status >= 500 && err.status < 600) ? UpdateStatus.SERVER_ERROR : err.status,\n                    timestamp: Date.now(),\n                    tripId,\n                });\n            } else {\n                return of({\n                    failures: 1,\n                    passages: undefined,\n                    status: UpdateStatus.ERROR,\n                    timestamp: Date.now(),\n                    tripId,\n                });\n            }\n        });\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { TripPassagesModule } from './trip-passages.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from 'src/app/services';\nimport { IPassageStatus, TripPassagesUtil } from './trip-util';\n\n/**\n * Resolver used to retrieve TripPassage Information in {@link TripPassagesRoutingModule}\n */\n@Injectable()\nexport class TripPassagesResolver implements Resolve<IPassageStatus> {\n\n    public constructor(private api: ApiService) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IPassageStatus> {\n        const tripId: string = route.params.tripId as string;\n        return this.api.getTripPassages(tripId)\n            .pipe(TripPassagesUtil.convertResponse(tripId),\n                TripPassagesUtil.handleError(tripId));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: TripPassagesComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':tripId',\n        resolve: {\n            tripPassages: TripPassagesResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class TripPassagesRoutingModule { }\n","<mat-nav-list *ngIf=\"hasPassages(); else noPassagesBlock\" role=\"list\"><app-trip-passages-list-item *ngFor=\"let passageItem of passages\" [passage]=\"passageItem\"></app-trip-passages-list-item></mat-nav-list><ng-template #noPassagesBlock><h3>No Passages</h3></ng-template>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ITripPassage } from '@manniwatch/api-types';\nimport { TripInfoWithId } from 'src/app/services';\n\n/**\n * List of Departures Component\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-trip-passages-list',\n    styleUrls: ['./trip-passages-list.component.scss'],\n    templateUrl: './trip-passages-list.component.html',\n})\nexport class TripPassagesListComponent {\n    @Input()\n    public set tripInfo(info: TripInfoWithId) {\n        if (info) {\n            const passages: ITripPassage[] = [];\n            if (info.actual) {\n                passages.push(...info.actual);\n            }\n            if (info.old && info.old.length > 0) {\n                passages.push(...info.old);\n            }\n            passages.sort((a: ITripPassage, b: ITripPassage): number =>\n                parseInt(a.stop_seq_num, 10) - parseInt(b.stop_seq_num, 10));\n            this.passages = passages;\n            return;\n        }\n        this.passages = [];\n    }\n\n    public passages: ITripPassage[] = [];\n\n    /**\n     * Returns if the atleast one passages was provided\n     * @returns true if there is atleast one departure\n     */\n    public hasPassages(): boolean {\n        return Array.isArray(this.passages) && this.passages.length > 0;\n    }\n\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { IVehicleLocation } from '@manniwatch/api-types';\nimport { Subscription } from 'rxjs';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { runInsideZone } from 'src/app/util/rxjs';\nimport { TripPassagesService } from './trip-passages.service';\nimport {\n    UpdateStatus,\n} from './trip-util';\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    providers: [\n        TripPassagesService,\n    ],\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.html',\n})\nexport class TripPassagesComponent implements OnInit, OnDestroy {\n\n    private subscriptions: Subscription[] = [];\n    public headerMapData: IStaticMapData;\n    public readonly STATUS_OPS: typeof UpdateStatus = UpdateStatus;\n    constructor(public readonly zone: NgZone,\n        public readonly passageService: TripPassagesService) { }\n\n    public ngOnInit(): void {\n        this.subscriptions.push(this.passageService\n            .createStopLocationObservable()\n            .pipe(runInsideZone(this.zone))\n            .subscribe({\n                next: (stopLocation: IVehicleLocation): void => {\n                    if (stopLocation) {\n                        this.headerMapData = {\n                            map: {\n                                center: stopLocation,\n                            },\n                            stops: undefined,\n                            vehicles: [stopLocation],\n                        };\n                    } else {\n                        this.headerMapData = {\n                            map: {\n                                blur: true,\n                                center: undefined,\n                            },\n                        };\n                    }\n                },\n            }));\n    }\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach((sub: Subscription): void => {\n            sub.unsubscribe();\n        });\n        this.subscriptions = [];\n    }\n}\n","<ng-container *ngIf=\"passageService.statusObservable | async as status\"><app-header-box title=\"{{status?.tripInfo.routeName}} - {{status?.tripInfo.directionText}}\"><map appOlStatic [mapData]=\"headerMapData\"></map></app-header-box><div class=\"not-found\" *ngIf=\"status.status==STATUS_OPS.NOT_FOUND\"><h4>not found</h4></div><app-trip-passages-list [tripInfo]=\"status.tripInfo\"></app-trip-passages-list></ng-container>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { HeaderBoxModule } from 'src/app/modules/header-box';\nimport { OlStaticMapModule } from 'src/app/modules/openlayers';\nimport { TripPassagesListItemComponent } from './trip-passages-list-item.component';\nimport { TripPassagesListComponent } from './trip-passages-list.component';\nimport { TripPassagesRoutingModule } from './trip-passages-routing.module';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n@NgModule({\n    declarations: [\n        TripPassagesComponent,\n        TripPassagesListComponent,\n        TripPassagesListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        TripPassagesRoutingModule,\n        HeaderBoxModule,\n        OlStaticMapModule,\n    ],\n    providers: [\n        TripPassagesResolver,\n    ],\n})\nexport class TripPassagesModule { }\n"]}