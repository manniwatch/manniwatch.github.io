{"version":3,"sources":["./src/app/routes/stop-point/stop-point-routing.module.ts","./src/app/routes/stop-point/index.ts","./src/app/routes/stop-point/stop-point-info.service.ts","./src/app/routes/stop-point/stop-point-info.component.ts","./src/app/routes/stop-point/stop-point-info.component.html","./src/app/routes/stop-point/stop-point-info.resolver.ts","./src/app/routes/stop-point/stop-point.module.ts"],"names":[],"mappings":"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","file":"routes-stop-point-es2015.js","sourcesContent":["/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopPointInfoComponent } from './stop-point-info.component';\nimport { StopPointInfoResolver } from './stop-point-info.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopPointInfoComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':stopPointId',\n        resolve: {\n            stopPoint: StopPointInfoResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopPointRoutingModule { }\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nexport { StopPointModule } from './stop-point.module';\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopPassage, IStopPointLocation } from '@manniwatch/api-types';\nimport { interval, Observable } from 'rxjs';\nimport { first, map, mergeMap, startWith, switchMap } from 'rxjs/operators';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { ApiService } from 'src/app/services';\nimport { StopPointService } from 'src/app/services';\n\nexport interface IStatus {\n    location?: IStopPointLocation;\n    passages: IStopPassage;\n}\n@Injectable()\nexport class StopPointInfoService {\n    public readonly stopPassageObservable: Observable<IStopPassage>;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        public stopService: StopPointService,\n        private appRef: ApplicationRef) {\n        this.stopPassageObservable = this.route.data.pipe(map((params: any): IStopPassage => {\n            return params.stopPoint;\n        }));\n    }\n    public createStopPassageRefreshObservable(): Observable<IStopPassage> {\n        return this.stopPassageObservable\n            .pipe(switchMap((value: IStopPassage): Observable<IStopPassage> => {\n                return this.appRef\n                    .isStable.pipe(first((state: boolean): boolean => state),\n                        mergeMap((): Observable<IStopPassage> => {\n                            return interval(5000)\n                                .pipe(switchMap((): Observable<IStopPassage> =>\n                                    this.apiService\n                                        .getStopPointPassages(value.stopShortName)));\n                        }),\n                        startWith(value));\n            }));\n    }\n\n    public createStopPointLocationObservable(): Observable<IStaticMapData> {\n        return this.stopPassageObservable\n            .pipe(switchMap((stopPassage: IStopPassage): Observable<IStopPointLocation> => {\n                return this.stopService.watchStopPoint(stopPassage.stopShortName)\n                    .pipe(startWith<IStopPointLocation>(undefined as IStopPointLocation));\n            }), map((stop: IStopPointLocation): IStaticMapData => {\n                // tslint:disable-next-line:triple-equals\n                if (stop == undefined) {\n                    return { map: { blur: true } };\n                } else {\n                    return {\n                        map: {\n                            blur: false,\n                            center: stop,\n                        },\n                    };\n                }\n            }));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { IStopPassage } from '@manniwatch/api-types';\nimport { Subscription } from 'rxjs';\nimport { IStaticMapData } from 'src/app/modules/openlayers';\nimport { StopPointInfoService } from './stop-point-info.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [StopPointInfoService],\n    selector: 'app-stop-point-info',\n    styleUrls: ['./stop-point-info.component.scss'],\n    templateUrl: './stop-point-info.component.html',\n})\nexport class StopPointInfoComponent implements OnInit, OnDestroy {\n\n    public headerMapData: IStaticMapData;\n    private subscriptions: Subscription[] = [];\n    public stopPassage: IStopPassage;\n    constructor(public stopInfoService: StopPointInfoService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscriptions.push(this.stopInfoService\n            .createStopPointLocationObservable()\n            .subscribe({\n                next: (mapData: IStaticMapData): void => {\n                    this.headerMapData = mapData;\n                },\n            }));\n        this.subscriptions.push(this.stopInfoService\n            .createStopPassageRefreshObservable()\n            .subscribe({\n                next: (mapData: IStopPassage): void => {\n                    this.stopPassage = mapData;\n                },\n            }));\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach((sub: Subscription): void => {\n            sub.unsubscribe();\n        });\n        this.subscriptions = [];\n    }\n}\n","<app-header-box title=\"{{stopPassage?.stopName}}\"><map appOlStatic [mapData]=\"headerMapData\"></map></app-header-box><mat-tab-group mat-stretch-tabs dynamicHeight><mat-tab i18n-label=\"tab header departures|Departures@@departures\" label=\"Departures\"><app-departure-list [departures]=\"stopPassage?.actual\"></app-departure-list></mat-tab><mat-tab i18n-label=\"tab header routes|Routes@@Routes\" label=\"Routes\"><app-route-list [routes]=\"stopPassage?.routes\"></app-route-list></mat-tab></mat-tab-group><ng-template *ngIf=\"false\"><div class=\"error-box\"><h3>Error occured</h3><p>Will retry in a 0s</p></div></ng-template>","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopPassage } from '@manniwatch/api-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class StopPointInfoResolver implements Resolve<IStopPassage> {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: ApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IStopPassage> {\n        return this.api\n            .getStopPointPassages(route.params.stopPointId)\n            .pipe(catchError((err: any | HttpErrorResponse): Observable<any> => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n","/*!\n * Source https://github.com/manniwatch/manniwatch Package: client-ng\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { DepartureListModule } from 'src/app/modules/departure-list';\nimport { HeaderBoxModule } from 'src/app/modules/header-box';\nimport { OlStaticMapModule } from 'src/app/modules/openlayers';\nimport { RouteListModule } from 'src/app/modules/route-list';\nimport { StopPointInfoComponent } from './stop-point-info.component';\nimport { StopPointInfoResolver } from './stop-point-info.resolver';\nimport { StopPointRoutingModule } from './stop-point-routing.module';\n@NgModule({\n    declarations: [\n        StopPointInfoComponent,\n    ],\n    imports: [\n        CommonModule,\n        DepartureListModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        StopPointRoutingModule,\n        MatTabsModule,\n        HeaderBoxModule,\n        OlStaticMapModule,\n        RouteListModule,\n    ],\n    providers: [\n        StopPointInfoResolver,\n    ],\n})\nexport class StopPointModule { }\n"],"sourceRoot":"webpack:///"}